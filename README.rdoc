= Double Agent

double_agent is a library for parsing browser and operating system info out of user 
agent strings. It is designed for parsing large sets for review or analysis.

*NOTE* Support for Ruby 1.8.x was dropped after version 0.2.3.

== Installation

    gem install double_agent

== Loading

Double Agent is broken up into modules - Parser, Resources, Stats and Logs.

    # Load the core modules (Parser, Resources)
    require 'double_agent'

    # Load modules individually
    require 'double_agent/parser|resources|stats|logs|all'

= Parser

    ua_string = "I'm a user agent string for Chrome 11 on Ubuntu"

    DoubleAgent.browser(ua_string)
    => "Chrome 11"

    DoubleAgent.browser_family(ua_string)
    => "Chromium"

    DoubleAgent.os(ua_string)
    => "Ubuntu"

    DoubleAgent.os_family(ua_string)
    => "GNU/Linux"

See the DoubleAgent module for more.

= Resources

DoubleAgent::Resource is a mix-in for objects with a user_agent method or attribute.
It gives that class's objects all of the above methods and more.

    class Login
      include DoubleAgent::Resource

      def user_agent
        #returns the user agent string the user logged in with
      end
    end

    login = Login.find(76)

    login.browser
    => "Firefox 4"

    login.os_family
    => "OS X"

= Stats

Calculate browser and OS shares for large sets of DoubleAgent::Resource objects with DoubleAgent::Stats::percentages_for.

    logins = Login.all
    p logins.size
    => 1000

    stats = DoubleAgent::Stats.percentages_for(logins, :browser_family, :os_family)
    p stats
    => [["Firefox", "Windows", 50.0, 500], ["Internet Explorer", "Windows", 20.0, 200], ["Safari", "OS X", 20.0, 200], ["Firefox", "GNU/Linux", 10.0, 100]]

    stats.each do |browser_family, os_family, percent, real_num|
      puts "#{browser_family} on #{os_family} - #{percent}% (#{real_num} hits)"
    end
    => "Firefox on Windows - 50% (500 hits)"
    => "Internet Explorer on Windows - 20% (200 hits)"
    => "Safari on OS X - 20% (200 hits)"
    => "Firefox on GNU/Linux - 10% (100 hits)"

= Logs

DoubleAgent::Logs::entries parses through Apache and Nginx access logs, instantiating each log line into a DoubleAgent::Logs::Entry
object. It even reads gzipped logs (requires zlib)! Since the DoubleAgent::Logs::Entry class mixes in DoubleAgent::Resource, you
can easily calculate browser and/or OS share on your site.

    entries = DoubleAgent::Logs.entries("/var/log/nginx/my-site.access.log*")
    stats = DoubleAgent::Stats.percentages_for(entries, :browser)

    p stats
    => [["Firefox 4", 20.0, 650], ["Internet Explorer 8", 18.0, 587], ...]

Check out the DoubleAgent::Logs::Entry class for more methods besides user_agent.
