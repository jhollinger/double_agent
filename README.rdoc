= Double Agent

double_agent is a library for parsing browser and operating system names out of browser user 
agent strings, specifically large numbers of them for review or analysis. You can use the 
DoubleAgent module either stand-alone or with "Resources" (in Rails parlance). There are 
helpers for parsing user agent strings from Apache and Nginx log files as well as helpers 
for generating browser percentages for large numbers of Resources.

The DoubleAgent module consists of four components: core, resources, stats, and logs. You may
load the default components (core, resources and stats) with:

    require 'double_agent'

or require them individually:

    require 'double_agent/<name>'

Finally, you may require every possible component with:

    require 'double_agent/all'

= Core

The core parser.

    ua_string = "pretent I'm a user agent string for Firefox 4 on Ubuntu"

    DoubleAgent.browser(ua_string)
    => "Firefox 4"

    DoubleAgent.browser_family(ua_string)
    => "Firefox"

    DoubleAgent.browser_sym(ua_string)
    => :firefox_4

    DoubleAgent.browser_family_sym(ua_string)
    => :firefox

    DoubleAgent.os(ua_string)
    => "Ubuntu"

    DoubleAgent.os_family(ua_string)
    => "GNU/Linux"

    DoubleAgent.os_sym(ua_string)
    => :ubuntu

    DoubleAgent.os_family_sym(ua_string)
    => :linux

As you can see with the *_sym methods, each browser and OS has it's own unique symbol name/id.
You may pass these to any of the above methods, instead of of a user agent string.

    DoubleAgent.browser_family(:firefox_4)
    => 'Firefox'

= Resources

Say you're saving a record of each user's login so you can determine their favorite browser.
If your Login class has an instance user_agent method or attribute, you can include the Resource module 
to get all the above browser and OS methods.

    class Login
      include DoubleAgent::Resource

      def user_agent
        #returns this object's user agent string
      end
    end

    login = Login.find(76)

    login.browser
    => "Firefox 4"

    login.os_family
    => "OS X"

= Stats

Figure out what percent of DoubleAgent::Resource'd objects use which browser, browser family, os, 
etc., or any combination of these.

== Example 1

    logins = Login.all
    stats = DoubleAgent.percentages_for(logins, :browser)
    stats.each do |percent, browser_sym|
      puts "#{DoubleAgent.browser(browser_sym)} - #{percent}%"
    end

    Firefox 4 - 20%
    Internet Explorer 8 - 18%
    ...

== Example 2

    logins = Login.all
    stats = DoubleAgent.percentages_for(logins, :browser_family, :os_family)
    stats.each do |percent, browser_sym, os_sym|
      puts "#{DoubleAgent.browser_family(browser_sym)} on #{DoubleAgent.os_family(os_sym)} - #{percent}%"
    end

    Firefox on Windows - 50%
    Internet Explorer on Window - 20%
    Safari on OS X - 20%
    Firefox on GNU/Linux - 10%

= Logs

double_agent/logs is an optional component you must require manually. It contains a
simple DoubleAgent::LogEntry class representing one line in an Apache or Nginx access log, storing
the user agent in its user_agent attr. As you might guess, it includes DoubleAgent::Resource, 
so it has all the browser and os methods.

    require 'double_agent'
    require 'double_agent/logs'

    entries = DoubleAgent.log_entries("/var/log/nginx/my-site.access.log*")
    entries.each do |entry|
      puts entry.browser
    end

    Firefox 3
    Internet Explorer 8
    Internet Explorer 9
    Firefox 4
    Internet Explorer
    Safari
    Chrome
    ...
